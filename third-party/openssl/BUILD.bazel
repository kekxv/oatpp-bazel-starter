"""An openssl build file based on a snippet found in the github issue:
https://github.com/bazelbuild/rules_foreign_cc/issues/337
"""

load("@rules_foreign_cc//foreign_cc:defs.bzl", "configure_make", "configure_make_variant")

exports_files([
    "repositories.MODULE.bazel",
])

configure_make_variant(
    name = "openssl_msvc",
    configure_command = "Configure",
    configure_in_place = True,
    configure_options = [
        "no-shared",
        "no-sse2",
        "-static",
        "no-asm",
        "no-comp",
        "no-idea",
        "no-weak-ssl-ciphers",
        "VC-WIN64A",
        # "VC-WIN32", # windows 32 bit build on Windows
        "ASFLAGS=\" \"",
    ],
    configure_prefix = "$$PERL",
    env = {
        # The Zi flag must be set otherwise OpenSSL fails to build due to missing .pdb files
        "CFLAGS": "-Zi",
        "PERL": "$$EXT_BUILD_ROOT$$/$(PERL)",
    },
    lib_source = "@openssl-1.1//:all",
    out_static_libs = [
        "libssl.lib",
        "libcrypto.lib",
    ],
    target_compatible_with = select({
        "@platforms//os:windows": [],
        "//conditions:default": ["@platforms//:incompatible"],
    }),
    targets = [
        "build_programs",
        "install_sw",
    ],
    toolchain = "@rules_foreign_cc//toolchains:preinstalled_nmake_toolchain",
    toolchains = ["@rules_perl//:current_toolchain"],
)

CONFIGURE_OPTIONS = [
    "no-shared",
    "no-sse2",
    "-static",
]

configure_make(
    name = "openssl-build",
    args = ["-j4"],
    configure_command = "Configure",
    configure_options = CONFIGURE_OPTIONS + select({
        "@platforms//os:osx": [
            "ARFLAGS=\"-static -o\"",
        ],
        "@platforms//os:windows": [
            "VC-WIN64A",
            "no-asm",
        ],
        "//conditions:default": [
            "-fPIC",
        ],
    }),
    env = select({
        "@platforms//os:windows": {
            "CFLAGS": "/MT",
            "CPPFLAGS": "/MT",
        },
        "@platforms//os:linux": {
            "CFLAGS": "-fPIC",
            "CPPFLAGS": "-fPIC",
        },
        "//conditions:default": {},
    }),
    lib_source = "@openssl-3//:all",
    linkopts = select({
        "//conditions:default": [
        ],
    }),
    out_lib_dir = select({
        "@platforms//os:linux": "lib64",
        "//conditions:default": "lib",
    }),
    out_static_libs = select({
        "@platforms//os:windows": [
            "libssl.lib",
            "libcrypto.lib",
        ],
        "//conditions:default": [
            "libssl.a",
            "libcrypto.a",
        ],
    }),
    target_compatible_with = select({
        "@platforms//os:windows": ["@platforms//:incompatible"],
        "//conditions:default": [],
    }),
    targets = [
        "build_libs",
        "install_dev",
    ],
    visibility = ["//visibility:public"],
)

cc_library(
    name = "openssl",
    visibility = ["//visibility:public"],
    deps = select({
        "@platforms//os:windows": [":openssl_msvc"],
        "//conditions:default": [
            ":openssl-build",
        ],
    }),
)
